# pce-5155.cfg

cfg.hdc = true

# Add a directory to the end of the file search path.
#
# The search path is used if an input file is specified with
# a relative file name. In that case the file is searched for
# in all directories of the search path. The current directory
# is always implicitly added to the end of the search path.
#
# If the first character of the string is a "-", the directory
# is added to the beginning of the search path.
path = "."
path = "rom"

system {
    # The specific model to emulate. Possible values are
	# 5150 and 5160 (An IBM 5155 is a glorified 5160)
	model = "5160"

    # The boot drive. Use 0 for the first floppy disk drive
	# and 128 for the first hard disk.
	boot = 128

    # Enable or disable the POST memory test. If this option
	# is set to 0, 0x1234 is written to 0040:0072, simulating
	# a restart instead of a cold start.
	memtest = 0

	# The number of floppy disk drives.
	floppy_disk_drives = 2

	# Enable read access to the host's RTC.
	rtc = 1

	# Patch the main BIOS before the emulator starts running.
	# If this option is set, the main BIOS is patched to use
	# a custom initialization routine.
	patch_bios_init  = 0
	
	# Patch BIOS interrupt 0x19
	# If this option is set, custom code is executed whenever
	# int 0x19 is called. This custom code enables the PCE
	# int 0x13 handler.
	patch_bios_int19 = 0
}

cpu {
    # The CPU model.
	# Recognized models are: 8086, 8088, 80186, 80188
	model = "8088"
	
	# This sets the CPU speed with respect to the emulated
	# system clock. A value of 1 emulates a 4.77MHz CPU.
	# A higher value emulates a faster CPU but also takes up
	# more host CPU time. A value of 0 dynamically adjusts
	# the CPU speed.
	speed = 1
}


# Multiple "ram" sections may be present but they must not overlap.
ram {
	# The linear base address
	address = 0

	# The memory block size
	size = 512K

	# The memory block is initialized with this value
	default = 0x00
}

# Multiple "rom" sections may be present
rom {
	# The linear base address
	address = 0xf0000

	# The rom size in bytes
	size = 64K

	# The memory block is initialized with this value
	#default = 0xff

	# The file from which the rom code is loaded
	#file = "pce-bios.rom"
}

rom {
	# The linear base address
	address = 0xf0000

	# The rom size in bytes
	size = 32K

	# The memory block is initialized with this value
	#default = 0xff

	# The file from which the rom code is loaded
	#file = "pce-bios.rom"
}

# "load" sections are processed after all the "ram" and "rom"
# sections. It is possible to overwrite read-only blocks, too.
load {
	# The PCE ROM extension
	format  = "binary"
	address = 0xf0000
	file    = "ibmpc-pcex.rom"
}

load {
	# The ROM BASIC
	format  = "binary"
	address = 0xf6000
	file    = "ibm-basic-1.10.rom"
}

load {
	# The main BIOS
	format  = "binary"
	address = 0xfe000
	file    = "ibm-xt-1982-11-08.rom"
}

# Multiple "terminal" sections may be present. The first
# one will be used unless a terminal type is specified
# on the command line.
terminal {
	driver = "sdl"

#	escape = "CtrlRight"

	scale      = 1
	border     = 0
	fullscreen = 0
		
	mouse_mul_x = 1
	mouse_div_x = 1
	mouse_mul_y = 1
	mouse_div_y = 1
}

terminal {
	driver = "x11"

#	escape = "CtrlRight"

	scale = 1

	mouse_mul_x = 1
	mouse_div_x = 1
	mouse_mul_y = 1
	mouse_div_y = 1
}

terminal {
	driver = "null"
}

# Multiple "video" sections may be present. The first one will be
# used unless a video adapter type is specified on the command
# line.
# Video sections may contain "rom", "ram" and "load" subsections
# to load ROMs only if a specific video adapter is selected.
#
video {
	# IBM CGA
	device = "cga"

	# Select the built in CGA font
	#   0 = thick font (default)
	#   1 = thin font
	font = 0

	# The blink rate for blinking characters and the
	# cursor. Setting this to 0 will turn off blinking.
	blink = 16
}

speaker {
	# The speaker volume in the range [0...1000]
	volume = 500

	# Apply a low-pass filter with the specified cut-off
	# frequency in Herz. This is separate from the low-pass
	# filter in the sound driver. If the frequency is 0,
	# the filter is disabled.
	lowpass = 8000

	# The sample rate at which sound is sent to the sound driver.
	sample_rate = 44100

	#driver = "null"
	#driver = "wav:wav=speaker.wav:lowpass=0:wavfilter=0"
	#driver = "oss:dev=/dev/dsp:wav=speaker.wav:lowpass=0:wavfilter=0"
	driver = "sdl:wav=speaker.wav:lowpass=0:wavfilter=0"
}

# Up to 4 parallel ports can be defined
parport {
    # LPT1
	address = 0x378
	driver  = "stdio:file=par1.out:flush=1"
}

# The cassette interface
cassette {
	enable = 0

	# The cassette data file. The file will be created if
	# it does not exist.
	file = "cas1.cas"

	# The data format
	#
	# 1: Read and write cassette data as 8 bit signed PCM at
	#    44100 HZ.
	#
	# 0: Read and write cassette data as binary.
	#
	# If pcm is not defined, PCM mode is set if the file name ends
	# with ".pcm", binary mode otherwise.
	#pcm = 1

	# PCM filtering
	#
	# 1: Apply a low-pass filter to the PCM data written to the
	#    cassette file.
	#
	# 0: The PCM data written to the cassette file is a
	#    square wave.
	filter = 1

	# The initial cassette mode (load or save). The default
	# is "load".
	mode = "load"

	# The initial tape file position. The default is 0.
	position = 0

	# If append is true then the file position is set to the
	# end of the file instead of to "position".
	append = 0
}

# The floppy disk controller
fdc {
	address = 0x3f0
	irq     = 6

	# Map PCE drives to FDC drives. FDC drives that have no PCE
	# drive assigned to them will be handled by the PCE int 13
	# handler.
	drive0 = 0x00
	drive1 = 0x01
	#drive2 = 0x02
	#drive3 = 0x03

	# Enable or disable accurate timing.
	# If accurate timing is enabled, the CPU speed should be set to
	# 1, otherwise timeout errors will occur.
	accurate = 1

	# Ignore the end of track value.
	# If this option is enabled, multi-track operations will no longer
	# work, but floppy disks with more than 8 or 9 sectors per track
	# can be used even with older BIOSes.
	ignore_eot = 0
}


if (cfg.hdc) {
	rom {
		address = 0xc8000
		size    = 32K
		default = 0xff
	}

	load {
		# The hard disk BIOS
		format  = "binary"
		address = 0xc8000
		file    = "ibm-mfm-1985-10-28.rom"
	}



	# The XT hard disk controller
	hdc {
		address = 0x320
		irq     = 5

		# Map PCE drives to HDC drives.
		drive0  = 0x80
		drive1  = 0x81

		# The number of sectors per track.
		# Most BIOSes get confused if this is anything other than
		# 17 for MFM controllers and 26 for RLL controllers.
		sectors = 17

		# IBM BIOS (1985-10-28)
		#
		# Configuration switches:
		#   bits 0-1: Drive 1 type
		#   bits 2-3: Drive 0 type
		#   bits 4-7: Unused
		#
		# Drive types:
		#   0: 306/4/17
		#   1: 612/4/17
		#   2: 615/4/17
		#   3: 306/8/17
		#
		switches = 0b00001010
	}
}


# Disk types are:
# "image"  A raw image file. "c", "h" and "s" must be specified.
# "dosemu" A DOSEMU style hard disk image file.
# "pce"    A PCE style disk image file.
# "ram"    A RAM disk. If a file name is specified, the contents
#          of that file are loaded into the RAM disk (but the file
#          is never altered).
# "auto"   Try to autodetect the image file format. This works for
#          DOSEMU and PCE disk images as well as raw images starting
#          with a DOS boot sector.
#
# The drive number is the number used by the BIOS, so 128 is the
# first hard disk, 0 is the first floppy disk.
#
# The c, h, s parameters determine the actual image file layout, the
# visible_c, visible_h, visible_s parameters determine the disk size
# as reported by the BIOS.
#
# If multiple file names are specified, they will be tried in order
# until one of them can be opened.
#
# If optional is set to 1 no error will be reported if the disk
# can't be opened.
#
# If there is more than one entry for the same drive, the first
# one that can be successfully opened will be used and all others
# ignored.
#
# If a COW (copy on write) file is specified, changes to the disk
# image are written to that file and the image is not touched.

# The first floppy drive
disk {
	drive    = 0
	optional = 1
	type     = "auto"
	file     = "fd1440.pbi"
	file     = "drv_00.img"
	file     = "fd0.img"
	file     = "fd0.pfdc"
}

# The second floppy drive
disk {
	drive    = 1
	optional = 1
	type     = "auto"
	file     = "drv_01.img"
	file     = "fd1.img"
	file     = "fd1.pfdc"
}

# The first harddisk
disk {
	drive    = 128
	type     = "auto"
    #file     = "../dos5.qed"
    file     = "hd0.img"
    file     = "hd0.pimg"
	readonly = 0
	optional = 1
}